대본

1.
쉽게 말해서
Object Detection = 여러가지 물체에 대한 Classification + 
물체의 위치정보를 파악하는 Localization
어디에 활용하면 좋을지?
Object Detection은 자율주행자동차, CCTV 감시, 스포츠경기, 무인 점포

2.
Computer Vision분야 Major 학회들에서 소개되었던 Object Detection 논문들의 흐름입니다. 
Object Detection의 두 부류(?)의 대표주자 논문들과,
이를 뒤따라 성능을 향상시킨 논문들을 소개

3.

rcnn 의 장점이자 의의는 
딥러닝을 이용한 이미지 디테션의 시초
처음으로, 효과적으로 풀었다

시초는 굉장히 중요하지만, 간단하다

4.
하나의 이미지를 CNN에 집어 넣고 컴볼류션 피쳐 맵 위에서 해당 영역에 정보를 빼오는것
PP에서 제시하는 SPP레이어를 거친 다음 분류

6
정확한 물체 감지 및 의미 론적 세분화를위한 풍부한 기능 계층 기술 보고서

정확한 피사체 검출과 풍부한 경험을 위한 풍부한 기능 
결국 앞에 보이는 논문들에서 네모를 효과적으로 치는것에대해
연구가 이루어 졌지만 지금은 그렇게 하지않고
지금은 네모를 많이 뽑아낸다
딥러닝 학습이 아닌 다른방법

이미지안에서 피처를 CNN으로 뽑아낸다.
물체를 네모를 쳐줘야한다.

디테션 이미지안에 네모를 치고 여기에 어떤것이 있다.
이미지안에서 딥러닝 학습이 아닌, 기존의 방법으로 네모를 뽑는다.

이미지를 넣고, 

원하는 사이즈로 리사이즈 -> 정사각형화 -> CNN 집어넣고 -> 피처를 뽑는다
네모를 2000개 뽑고 각각 CNN집어넣고 분류
찾고싶은거 분류의 갯수 +1 쓸모없는 박스를 담는것


3개의 컴포넌트
1.딥러닝을 쓰지않고 물체가 있을거 같은 공간에 네모 (오래 걸린다)

2.네모로부터 미리 학습된 CNN를 통과시킨다.

3. 입력된 이미지에 상관없이 정사각형으로 만든다
 입력이미지를 가지고 피처를 뽑는다



GPU 한장에 13초, CPU 한장에 53초


오래 걸리는 이유 -> 이미지에 2천개 뽑고 각각 CNN에 들어가서 오래걸린다.


이걸 해결하기 위해

REGION PROPOSAL 를 통해 2000개 뽑기
뽑힌 네모가 실제 네모와 얼마나 겹치는지 확인
겹치는 영역이 IoU0.5보다 크면 POSITIVE 데이터



7
시각적 인식을 위해 딥 컨볼루션 네트워크에서의 공간 피라미드 풀링

